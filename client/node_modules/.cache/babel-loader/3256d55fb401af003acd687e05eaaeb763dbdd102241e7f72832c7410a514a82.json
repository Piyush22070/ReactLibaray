{"ast":null,"code":"var _jsxFileName = \"C:\\\\Codes\\\\Web devlopment\\\\React\\\\Slot Machine\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet c = 0;\nconst App = () => {\n  _s();\n  const [bgc, setcol] = useState(\"rgb(237, 255, 255)\");\n  const [sname, settext] = useState(\"ðŸ˜ \");\n  const bgChange = () => {\n    if (c % 2 == 0) {\n      setcol(\"rgb(192, 221, 197)\");\n      settext(\"ðŸ«¨\");\n    } else {\n      setcol(\"rgb(237, 255, 255)\");\n      settext(\"ðŸ˜ \");\n    }\n    c++;\n    console.log(c);\n  };\n\n  // const oribg = (()=>{\n  //     bg = 'rgb(237, 255, 255)'\n  //     setcol(bg)\n  // })\n  // setInterval(oribg,5000)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divi\",\n      style: {\n        backgroundColor: bgc\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"but\",\n        onClick: bgChange,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: sname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"5Wu/mxtNMLGD3ixbQu0ZTjX5Qag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","c","App","_s","bgc","setcol","sname","settext","bgChange","console","log","children","className","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Codes/Web devlopment/React/Slot Machine/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet c = 0\r\nconst App = (()=>{\r\n\r\n    \r\n    \r\n    const [bgc,setcol] = useState(\"rgb(237, 255, 255)\")\r\n    const [sname,settext] = useState(\"ðŸ˜ \")\r\n    const bgChange=(()=>{\r\n        \r\n        if(c%2 == 0){\r\n            setcol(\"rgb(192, 221, 197)\")\r\n            settext(\"ðŸ«¨\")\r\n        }\r\n        else{\r\n            setcol(\"rgb(237, 255, 255)\")\r\n            settext(\"ðŸ˜ \")\r\n        }\r\n        c++ \r\n        console.log(c)\r\n    })\r\n\r\n    // const oribg = (()=>{\r\n    //     bg = 'rgb(237, 255, 255)'\r\n    //     setcol(bg)\r\n    // })\r\n    // setInterval(oribg,5000)\r\n\r\n\r\n    return (\r\n    <>\r\n    <div className=\"divi\" style={{backgroundColor: bgc}} >\r\n        <button className=\"but\" onClick={bgChange}><h1>{sname}</h1></button>\r\n    </div>\r\n    </>\r\n    )\r\n})\r\n\r\nexport default App "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,IAAIC,CAAC,GAAG,CAAC;AACT,MAAMC,GAAG,GAAIA,CAAA,KAAI;EAAAC,EAAA;EAIb,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGT,QAAQ,CAAC,oBAAoB,CAAC;EACnD,MAAM,CAACU,KAAK,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMY,QAAQ,GAAEA,CAAA,KAAI;IAEhB,IAAGP,CAAC,GAAC,CAAC,IAAI,CAAC,EAAC;MACRI,MAAM,CAAC,oBAAoB,CAAC;MAC5BE,OAAO,CAAC,IAAI,CAAC;IACjB,CAAC,MACG;MACAF,MAAM,CAAC,oBAAoB,CAAC;MAC5BE,OAAO,CAAC,IAAI,CAAC;IACjB;IACAN,CAAC,EAAE;IACHQ,OAAO,CAACC,GAAG,CAACT,CAAC,CAAC;EAClB,CAAE;;EAEF;EACA;EACA;EACA;EACA;;EAGA,oBACAH,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA;MAAKc,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAACC,eAAe,EAAEV;MAAG,CAAE;MAAAO,QAAA,eAChDb,OAAA;QAAQc,SAAS,EAAC,KAAK;QAACG,OAAO,EAAEP,QAAS;QAAAG,QAAA,eAACb,OAAA;UAAAa,QAAA,EAAKL;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC,gBACJ,CAAC;AAEP,CAAE;AAAAhB,EAAA,CAlCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoCT,eAAeA,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}